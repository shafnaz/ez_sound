[gd_scene load_steps=11 format=3 uid="uid://c8lrdgmd6qf5j"]

[ext_resource type="PackedScene" uid="uid://cgvxc3xe4do8w" path="res://addons/ez_sound/button.tscn" id="2_o1k56"]

[sub_resource type="GDScript" id="GDScript_dy535"]
script/source = "@tool
extends Control

@onready var sound_list = $\"%sound_list\"
@onready var sp = $\"%sp\"
@onready var tree = $\"%tree\"
@onready var btn_reload = %btn_reload
@onready var button_copy = %button_copy
@onready var stream_bar = %stream_bar
@onready var scroll = %scroll
@onready var filedialog = %filedialog
@onready var label_dir = %label_dir
@onready var btn_dir = %btn_dir
@onready var label_no_dir = %label_no_dir
@onready var label_no_sounds = %label_no_sounds

const DRAGGABLE = preload(\"res://addons/ez_sound/draggable.tscn\")
const POPUP_LABEL = preload(\"res://addons/ez_sound/popup_label.tscn\")
const USER_SETTING_PATH = \"ez_sound/ez_sound_path\"

var selected_sound_button = null
var selected_sound_filename = \"\"
var btn_group = ButtonGroup.new()


func show_popup_message(pos, message):
	var inst = POPUP_LABEL.instantiate()
	self.add_child(inst)
	await get_tree().process_frame
	inst.popup_label(pos, message)


func _ready():
	set_process(false)
	filedialog.hide()
	filedialog.dir_selected.connect(_on_dir_selected)
	btn_reload.pressed.connect(_on_reload_pressed)
	button_copy.pressed.connect(_on_copy_pressed)
	btn_dir.pressed.connect(_on_set_dir_pressed)
	stream_bar.gui_input.connect(_on_stream_bar_gui)
	self.resized.connect(update_stream_bar)
	scroll.scroll_started.connect(update_stream_bar)
	scroll.scroll_ended.connect(update_stream_bar)
	label_dir.text = ProjectSettings.get_setting(USER_SETTING_PATH, \"No Sounds Dir Set\")
	_on_reload_pressed()
	pass

func _on_set_dir_pressed():
	filedialog.show()
	return


func _on_dir_selected(v:String):
	if not v.ends_with(\"/\"):
		v = v + \"/\"
	label_dir.text = v
	ProjectSettings.set_setting(USER_SETTING_PATH, v)
	_on_reload_pressed()


func _on_copy_pressed():
	show_popup_message(get_global_mouse_position() + Vector2(-100, -50), \"Code Copied!\")
	var filename = selected_sound_filename.split(\"/\")[-1]
	DisplayServer.clipboard_set(\"ez_sound.play_sfx(\\\"\" + filename + \"\\\")\")
	return


func _input(ev):
	update_stream_bar()


func _on_reload_pressed():
	selected_sound_button = null
	selected_sound_filename = \"\"
	stream_bar.hide()
	button_copy.hide()
	label_no_sounds.hide()
	label_no_dir.hide()
	for each in sound_list.get_children():
		each.queue_free()
	await get_tree().process_frame
	if DirAccess.dir_exists_absolute(label_dir.text):
		var files = list_files_in_directory(label_dir.text)
		if files.is_empty():
			label_no_sounds.show()
		else:
			for each in files:
				var sname = each.replace(\".\" + each.get_extension(), \"\")
				create_sound_button(sname, label_dir.text + each, each.get_extension())
			label_no_dir.hide()
			label_no_sounds.hide()
	else:
		label_no_dir.show()



func _on_stream_bar_gui(ev):
	if ev is InputEventMouseButton and ev.pressed == true  and ev.button_mask == 1:
		var touchx = ev.position.x
		stream_bar.value = remap(touchx, 0, stream_bar.size.x, stream_bar.min_value, stream_bar.max_value)
		var audio_length = sp.get_stream().get_length()
		sp.play(remap(stream_bar.value, 0, stream_bar.max_value, 0, audio_length))
		set_process(true)


func _process(_delta):
	if stream_bar.value == stream_bar.max_value:
		set_process(false)
	stream_bar.value = remap(sp.get_playback_position(), 0, sp.get_stream().get_length(), stream_bar.min_value, stream_bar.max_value)


func create_sound_button(display_name, file_path, extension):
	var inst = DRAGGABLE.instantiate()
	sound_list.add_child(inst)
	inst.label.text = display_name
	inst.connect(\"pressed\", Callable(self, \"_on_sound_button_pressed\").bind(inst, file_path))
	inst.button_group = btn_group
	inst.button_pressed = false
	inst.owner = self
	#set image
	if extension == \"mp3\":
		inst.spectrum.texture = generate_mp3_image(file_path)
	elif extension == \"wav\":
		inst.spectrum.texture = generate_wav_image(file_path)



func _on_sound_button_pressed(sound_button, file_path):
	button_copy.show()
	selected_sound_button = sound_button
	selected_sound_filename = file_path
	await get_tree().process_frame
	place_stream_bar()
	set_process(true)
	sp.stream = load(file_path)
	if \".mp3\" in file_path:
		sp.stream.loop = false
	sp.play()



func place_stream_bar():
	if selected_sound_button != null:
		update_stream_bar()
		stream_bar.show()
	else:
		stream_bar.hide()


func update_stream_bar():
	if selected_sound_button != null:
		stream_bar.global_position.x = selected_sound_button.get_global_rect().position.x
		stream_bar.size.x = selected_sound_button.size.x
		stream_bar.size.y = selected_sound_button.size.y / 2
		stream_bar.global_position.y = selected_sound_button.global_position.y + selected_sound_button.size.y - stream_bar.size.y

		button_copy.size.y = (selected_sound_button.size.y / 2) - 6
		button_copy.size.x = button_copy.size.y
		button_copy.global_position.y = selected_sound_button.global_position.y + 3
		button_copy.global_position.x = selected_sound_button.global_position.x + selected_sound_button.size.x - button_copy.size.x - 3


func list_files_in_directory(path):
	var files = []
	var dir = DirAccess.open(path)
	if dir:
		dir.list_dir_begin()
		var file_name = dir.get_next()
		while file_name != \"\":
			if dir.current_is_dir():
				pass
			else:
				if file_name.ends_with(\".mp3\") or file_name.ends_with(\".wav\"):
					files.append(file_name)
			file_name = dir.get_next()
	else:
		print(\"An error occurred when trying to access the path.\")
	return files



func generate_wav_image(filepath:String):
	var bar_width = 3
	var audio_stream_wav : AudioStreamWAV = load(filepath)
	var data = audio_stream_wav.get_data()

	var img = draw_peak_visualization(data, 200, 50, audio_stream_wav.format, false)
	# Create a texture from the image
	var texture = ImageTexture.new()
	texture = texture.create_from_image(img)  # This replaces the deprecated create_from_image(img, 0)
	return texture


func generate_mp3_image(filepath:String):
	var bar_width = 3
	var audio_stream_wav : AudioStreamMP3 = load(filepath)
	var data = audio_stream_wav.get_data()

	var img = draw_peak_visualization(data, 200, 50, 0, true)
	# Create a texture from the image
	var texture = ImageTexture.new()
	texture = texture.create_from_image(img)  # This replaces the deprecated create_from_image(img, 0)
	return texture



func draw_peak_visualization(data: PackedByteArray, width: int, height: int, format: int, is_mp3: bool = false) -> Image:
	var img = Image.new()
	img = img.create(width, height, false, Image.FORMAT_RGBA8)

	var step = max(data.size() / width, 1)
	# Correctly using inline 'if' for GDScript
	var height_factor = height / (65536.0 if is_mp3 or format == AudioStreamWAV.FORMAT_16_BITS else 256.0)

	for i in range(width):
		var idx = int(i * step)
		if idx + (1 if not is_mp3 else 0) >= data.size():
			break

		var sample = 0
		if is_mp3 or format == AudioStreamWAV.FORMAT_16_BITS:
			# Handling 16-bit data
			if idx + 1 < data.size():
				sample = int(data[idx] + data[idx+1] * 256)
				sample = sample if sample < 32768 else sample - 65536
		else:
			# Handling 8-bit data
			sample = int(data[idx]) - 128

		var amplitude = int(sample * height_factor) + height / 2
		amplitude = clamp(amplitude, 0, height - 1)

		# Draw vertical line from middle to amplitude and mirror it
		for y in range(int(height / 2)):
			if y <= abs(int(height / 2) - amplitude):
				img.set_pixel(i, height / 2 + y, Color(1, 1, 1, 1))  # Draw upward from the middle
				img.set_pixel(i, height / 2 - y, Color(1, 1, 1, 1))  # Draw downward from the middle

	return img
"

[sub_resource type="SystemFont" id="SystemFont_ve7ly"]
font_names = PackedStringArray("Arial")
font_weight = 600
oversampling = 3.0

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_utmbd"]
content_margin_left = 20.0
content_margin_top = 20.0
content_margin_right = 20.0
content_margin_bottom = 20.0
bg_color = Color(0, 0, 0, 0.184314)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_afdod"]
bg_color = Color(0.86, 0.4042, 0.730857, 0.223529)
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_hbhit"]
bg_color = Color(1, 0.82, 0.1, 0)
draw_center = false
border_width_right = 5
border_color = Color(1, 0.819608, 0.0980392, 1)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_533wf"]
content_margin_left = 0.0
content_margin_top = 0.0
content_margin_right = 0.0
content_margin_bottom = 0.0
bg_color = Color(0.780273, 0.634781, 0, 1)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_gmdps"]
content_margin_left = 0.0
content_margin_top = 0.0
content_margin_right = 0.0
content_margin_bottom = 0.0
bg_color = Color(0.6, 0.49, 0, 1)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_r00g0"]
content_margin_left = 0.0
content_margin_top = 0.0
content_margin_right = 0.0
content_margin_bottom = 0.0
bg_color = Color(0.958388, 0.78187, 7.70092e-07, 1)

[sub_resource type="CompressedTexture2D" id="CompressedTexture2D_oi7ro"]
load_path = "res://.godot/imported/copy (1).png-afb40324e0caeb4a0a3395981f8a8c5e.ctex"

[node name="EZ Sound" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_dy535")

[node name="MarginContainer" type="MarginContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 30
theme_override_constants/margin_top = 30
theme_override_constants/margin_right = 30
theme_override_constants/margin_bottom = 3

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer"]
clip_contents = true
layout_mode = 2

[node name="HSeparator2" type="HSeparator" parent="MarginContainer/VBoxContainer"]
auto_translate_mode = 1
visible = false
layout_mode = 2

[node name="btn_dir" parent="MarginContainer/VBoxContainer" instance=ExtResource("2_o1k56")]
unique_name_in_owner = true
layout_mode = 2

[node name="HSeparator" type="HSeparator" parent="MarginContainer/VBoxContainer"]
visible = false
layout_mode = 2

[node name="btn_reload" parent="MarginContainer/VBoxContainer" instance=ExtResource("2_o1k56")]
unique_name_in_owner = true
layout_mode = 2
text = "Reload"

[node name="HSeparator3" type="HSeparator" parent="MarginContainer/VBoxContainer"]
auto_translate_mode = 1
layout_mode = 2
theme_override_constants/separation = 20

[node name="label_dir" type="Label" parent="MarginContainer/VBoxContainer"]
unique_name_in_owner = true
auto_translate_mode = 1
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/font_color = Color(0.28119, 0.779158, 0.510497, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 0.32549)
theme_override_fonts/font = SubResource("SystemFont_ve7ly")
theme_override_font_sizes/font_size = 15
text = "res://sounds/"
horizontal_alignment = 1

[node name="scroll" type="ScrollContainer" parent="MarginContainer/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_vertical = 3
theme_override_styles/panel = SubResource("StyleBoxFlat_utmbd")
horizontal_scroll_mode = 0
scroll_deadzone = 20

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer/VBoxContainer/scroll"]
layout_mode = 2
size_flags_horizontal = 3

[node name="label_no_dir" type="Label" parent="MarginContainer/VBoxContainer/scroll/VBoxContainer"]
unique_name_in_owner = true
auto_translate_mode = 1
visible = false
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/font_color = Color(0.938671, 0.117006, 0.20342, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 0.027451)
text = "Select Sounds Dir"
horizontal_alignment = 1

[node name="label_no_sounds" type="Label" parent="MarginContainer/VBoxContainer/scroll/VBoxContainer"]
unique_name_in_owner = true
auto_translate_mode = 1
visible = false
layout_mode = 2
size_flags_horizontal = 3
theme_override_colors/font_color = Color(0.938671, 0.117006, 0.20342, 1)
theme_override_colors/font_shadow_color = Color(0, 0, 0, 0.027451)
text = "No Sounds in Selected Dir"
horizontal_alignment = 1

[node name="sound_list" type="VBoxContainer" parent="MarginContainer/VBoxContainer/scroll/VBoxContainer"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 3
theme_override_constants/separation = 0

[node name="sp" type="AudioStreamPlayer" parent="."]
unique_name_in_owner = true

[node name="stream_bar" type="ProgressBar" parent="."]
unique_name_in_owner = true
visible = false
layout_mode = 2
offset_left = 62.0
offset_top = 699.0
offset_right = 1214.0
offset_bottom = 726.0
mouse_filter = 1
theme_override_styles/background = SubResource("StyleBoxFlat_afdod")
theme_override_styles/fill = SubResource("StyleBoxFlat_hbhit")
value = 33.4
show_percentage = false

[node name="button_copy" type="Button" parent="."]
unique_name_in_owner = true
auto_translate_mode = 1
visible = false
layout_mode = 2
offset_left = 1132.0
offset_right = 1152.0
offset_bottom = 20.0
focus_mode = 0
theme_override_colors/icon_hover_pressed_color = Color(1, 1, 1, 1)
theme_override_colors/icon_hover_color = Color(1, 1, 1, 1)
theme_override_colors/icon_pressed_color = Color(1, 1, 1, 1)
theme_override_colors/icon_focus_color = Color(1, 1, 1, 1)
theme_override_colors/icon_normal_color = Color(1, 1, 1, 1)
theme_override_constants/icon_max_width = 15
theme_override_styles/hover = SubResource("StyleBoxFlat_533wf")
theme_override_styles/pressed = SubResource("StyleBoxFlat_gmdps")
theme_override_styles/normal = SubResource("StyleBoxFlat_r00g0")
icon = SubResource("CompressedTexture2D_oi7ro")
icon_alignment = 1

[node name="filedialog" type="FileDialog" parent="."]
unique_name_in_owner = true
title = "Open a Directory"
initial_position = 2
size = Vector2i(303, 600)
ok_button_text = "Select Current Folder"
dialog_hide_on_ok = true
file_mode = 2
